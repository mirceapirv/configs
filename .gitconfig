[user]
	name = mirceapirv
	email = mircea.pirv@gmail.com
[color]
	branch = auto
	diff = auto
	status = auto
	ui = true
[color "branch"]
	current = red reverse
	local = blue
	remote = green
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
[color "status"]
	added = yellow
	changed = green
	untracked = cyan
[alias]
	dt = difftool -y
	st = status -s
	cl = clone
	ci = commit
	cm = commit -m
	cma = commit -a -m
	ca = commit --amend
	rbm = rebase -p master
	rbc = rebase --continue
	amend = commit --amend
	amend = commit -a --amend
	caa = commit -a --amend -C HEAD
	filelog = log -u
	fl = log -u
	ai = add --interactive
	co = checkout
	com = checkout master
	br = branch
	bra = branch -ra
	le = log --oneline --decorate
	ll = log --pretty=format:%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]--decorate --numstat
	ls = log --pretty=format:%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]--decorate
	lds = log --pretty=format:%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]--decorate --date=short
	ld = log --pretty=format:%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]--decorate --date=relative
	lc = "!f() { git ll $1^..$1; }; f"
	lnc = log --pretty=format:%h\\ %s\\ [%cn]
	la = !git config -l | grep alias | cut -c 7-
	diff = diff --word-diff
	d = diff --word-diff
	dc = diff --cached
	dl = !git ll -1
	dlc = diff --cached HEAD^
	dr = "!f() { git diff $1^..$1; }; f"
	diffr = "!f() { git diff $1^..$1; }; f"
	branch = branch -ra
	r = reset
	r1 = reset HEAD^
	r2 = reset HEAD^^
	rh = reset --hard
	rh1 = reset HEAD^ --hard
	rh2 = reset HEAD^^ --hard
	svnr = svn rebase
	svnd = svn dcommit
	svnl = svn log --oneline --show-commit
	sl = stash list
	sa = stash apply
	ss = stash save
	cp = cherry-pick
	grep = grep -Ii
	gr = grep -Ii
	gra = "!f() { A=$(pwd) && TOPLEVEL=$(git rev-parse --show-toplevel) && cd $TOPLEVEL && git grep --full-name -In $1 | xargs -I{} echo $TOPLEVEL/{} && cd $A; }; f"
	f = !git ls-files | grep -i
	done = "!f() { git branch | grep $1 | cut -c 3- | grep -v done | xargs -I{} git branch -m {} done-{}; }; f"
	assume = update-index --assume-unchanged
	unassume = update-index --no-assume-unchanged
	assumed = !git ls-files -v | grep ^h | cut -c 3-
	unassumeall = !git assumed | xargs git update-index --no-assume-unchanged
	assumeall = !git st -s | awk {'print $2'} | xargs git assume
	lasttag = describe --tags --abbrev=0
	lt = describe --tags --abbrev=0
	ours = "!f() { git co --ours $@ && git add $@; }; f"
	theirs = "!f() { git co --theirs $@ && git add $@; }; f"
	lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%C(bold blue)<%an>%Creset' --abbrev-commit
	ec = config --global -e
	up = !git pull --rebase --prune $@ && git submodule update --init --recursive
	save = !git add -A && git commit -m 'SAVEPOINT'
	wip = !git add -u && git commit -mWIP
	undo = reset HEAD~1 --mixed
	wipe = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard
	bclean = "!f() { git branch --merged ${1-master} | grep -v ${1-master}$ | xargs -r git branch -d; }; f"
	bdone = "!f() { git checkout ${1-master} && git up && git bclean ${1-master}; }; f"
	ignore = update-index --assume-unchanged
	unignore = update-index --no-assume-unchanged
	ignored = !git ls-files -v | grep^[[:lower:]]
[push]
	default = tracking
[pull]
	default = current
[diff]
	tool = meld
	memonicprefix = true
	algorithm = patience
	guitool = meld
[branch]
	autosetuprebase = always
[apply]
	whitespace = nowarn
[merge]
	tool = meld
[core]
	editor = atom
[credential]
	helper = cache --timeout=86400
[filter "media"]
	clean = git-media-clean %f
	smudge = git-media-smudge %f
[gui]
	fontui = -family \"DejaVu Sans\" -size 9 -weight normal -slant roman -underline 0 -overstrike 0
	fontdiff = -family \"DejaVu Sans Mono\" -size 9 -weight normal -slant roman -underline 0 -overstrike 0
[filter "hawser"]
	clean = git hawser clean %f
	smudge = git hawser smudge %f
	required = true
[filter "lfs"]
	clean = git lfs clean %f
	smudge = git lfs smudge %f
	required = true
[difftool "meld"]
	path = /usr/bin/meld
